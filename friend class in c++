FRIEND CLASS IN C++

#include<iostream>

using namespace std;

//forward declaration---assures complier that there is class (complex )
//ahead..
class complex;


class calculator // friend class-------
{
	public:
		int add(int a, int b)
		{
			return (a+b);
		}
		
		int sumRealComplex(complex, complex); //definition not given , tells that there is class ahead
		int sumCompComplex(complex, complex);
	
};

class complex
{
	int a;
	int b;
	
	//individually declaring functions as friends 
	friend int calculator :: sumRealComplex(complex o1, complex o2); // declared as a friend(sumrealcomplex) to access the private data
	friend int calculator :: sumCompComplex(complex o1, complex o2);
	
	// aliter: declaring entire calculator class as friend
	//syntax: friend class calculator;
	 
	public:
	void setData(int v1, int v2)
	{
	  a = v1;
	  b = v2;	
    }
    
    void printNumber()
	{
		cout<<"your complex number is "<<a<<" + "<<b<<"i"<<endl;
	}
};

int calculator :: sumRealComplex(complex o1, complex o2)   // definition of class that is declared above
{
		return (o1.a+ o2.a);
}
int calculator :: sumCompComplex(complex o1, complex o2)
{
		return (o1.b+ o2.b);
}

int main()
{
	complex o1, o2;
	o1.setData(1,3);
	o2.setData(5,6);
	calculator calc;
	int res = calc.sumRealComplex(o1, o2);
	cout<<"the sum of real part of o1 and o2 is"<<res<<endl;
	int resc = calc.sumCompComplex(o1, o2);
	cout<<"the sum of complex part of o1 and o2 is"<<resc<<endl;
	return 0 ;
}
